import 'package:flutter/material.dart';import 'package:flutter_svg_provider/flutter_svg_provider.dart' as fs;import 'package:gaiadhiwise/core/app_export.dart';import 'package:gaiadhiwise/widgets/app_bar/appbar_leading_image.dart';import 'package:gaiadhiwise/widgets/app_bar/appbar_subtitle.dart';import 'package:gaiadhiwise/widgets/app_bar/custom_app_bar.dart';import 'package:gaiadhiwise/widgets/custom_outlined_button.dart';import 'package:gaiadhiwise/widgets/custom_text_form_field.dart';import 'package:gaiadhiwise/presentation/challengeboard_shareresult_one_bottomsheet/challengeboard_shareresult_one_bottomsheet.dart';
// ignore_for_file: must_be_immutable
class ChallengeboardScreen extends StatelessWidget {ChallengeboardScreen({Key? key}) : super(key: key);

TextEditingController monthController = TextEditingController();

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: SizedBox(width: double.maxFinite, child: Column(children: [_buildStack(context), Container(padding: EdgeInsets.symmetric(horizontal: 24.h, vertical: 17.v), child: Column(children: [Text("Workout of the day", style: CustomTextStyles.titleMediumPrimaryBold), SizedBox(width: 224.h, child: Text("Daily challenges, log your results, and cheer on others â€“ your hub for fitness triumphs!", maxLines: 4, overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: CustomTextStyles.bodySmallBluegray300)), SizedBox(height: 29.v), Column(children: [_buildShareYourResult(context), SizedBox(height: 24.v), _buildShareYourResult1(context)]), SizedBox(height: 5.v)]))])))); } 
/// Section Widget
Widget _buildStack(BuildContext context) { return SizedBox(height: 160.v, width: double.maxFinite, child: Stack(alignment: Alignment.bottomCenter, children: [Align(alignment: Alignment.topCenter, child: Container(padding: EdgeInsets.symmetric(vertical: 38.v), decoration: BoxDecoration(image: DecorationImage(image: fs.Svg(ImageConstant.imgGroup56), fit: BoxFit.cover)), child: Column(mainAxisSize: MainAxisSize.min, children: [SizedBox(height: 28.v), CustomAppBar(height: 27.v, leadingWidth: 48.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrowDown, margin: EdgeInsets.only(left: 24.h, bottom: 3.v)), centerTitle: true, title: AppbarSubtitle(text: "Challenge Board"))]))), Align(alignment: Alignment.bottomCenter, child: Container(margin: EdgeInsets.symmetric(horizontal: 24.h), padding: EdgeInsets.symmetric(horizontal: 12.h, vertical: 10.v), decoration: AppDecoration.fillPrimary.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 1.v), CustomTextFormField(controller: monthController, hintText: "Wed, December 13 2023", hintStyle: CustomTextStyles.bodySmallPrimary, textInputAction: TextInputAction.done, suffix: Container(margin: EdgeInsets.fromLTRB(30.h, 9.v, 10.h, 9.v), child: CustomImageView(imagePath: ImageConstant.imgCalendar11Primary, height: 18.adaptSize, width: 18.adaptSize)), suffixConstraints: BoxConstraints(maxHeight: 36.v), contentPadding: EdgeInsets.only(left: 10.h, top: 9.v, bottom: 9.v))])))])); } 
/// Section Widget
Widget _buildShareYourResult(BuildContext context) { return Container(padding: EdgeInsets.all(18.h), decoration: AppDecoration.outlineGray30002.copyWith(borderRadius: BorderRadiusStyle.roundedBorder14), child: Column(mainAxisSize: MainAxisSize.min, children: [Padding(padding: EdgeInsets.only(left: 1.h), child: _buildDeadliftxThree(context, dynamicText: "Deadlift 1x3")), SizedBox(height: 5.v), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 1.h), child: Text("Deadlift for load:", style: CustomTextStyles.bodyMediumGray800))), SizedBox(height: 1.v), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 1.h), child: Text("#1: 3reps", style: CustomTextStyles.bodyMediumGray800))), SizedBox(height: 36.v), Padding(padding: EdgeInsets.only(left: 1.h), child: _buildShowPreparations(context, showPreparationsText: "Show Preparations", viewAllResultsText: "View All Results", onTapShowPreparations: () {onTapTxtShowPreparations(context);}, onTapViewAllResults: () {onTapTxtViewAllResults(context);})), SizedBox(height: 15.v), CustomOutlinedButton(text: "Share Your Result", onPressed: () {onTapShareYourResult(context);})])); } 
/// Section Widget
Widget _buildShareYourResult1(BuildContext context) { return Container(padding: EdgeInsets.all(18.h), decoration: AppDecoration.outlineGray30002.copyWith(borderRadius: BorderRadiusStyle.roundedBorder14), child: Column(mainAxisSize: MainAxisSize.min, children: [Padding(padding: EdgeInsets.only(left: 1.h), child: _buildDeadliftxThree(context, dynamicText: "Deadlift 1x3")), SizedBox(height: 5.v), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 1.h), child: Text("Deadlift for load:", style: CustomTextStyles.bodyMediumGray800))), SizedBox(height: 1.v), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 1.h), child: Text("#1: 3reps", style: CustomTextStyles.bodyMediumGray800))), SizedBox(height: 36.v), Padding(padding: EdgeInsets.only(left: 1.h), child: _buildShowPreparations(context, showPreparationsText: "Show Preparations", viewAllResultsText: "View All Results", onTapShowPreparations: () {onTapTxtShowPreparations1(context);}, onTapViewAllResults: () {onTapTxtViewAllResults1(context);})), SizedBox(height: 15.v), CustomOutlinedButton(text: "Share Your Result", onPressed: () {onTapShareYourResult1(context);})])); } 
/// Common widget
Widget _buildDeadliftxThree(BuildContext context, {required String dynamicText, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text(dynamicText, style: CustomTextStyles.titleSmallSemiBold.copyWith(color: appTheme.gray800)), CustomImageView(imagePath: ImageConstant.imgArrowDownGray80020x20, height: 20.adaptSize, width: 20.adaptSize)]); } 
/// Common widget
Widget _buildShowPreparations(BuildContext context, {required String showPreparationsText, required String viewAllResultsText, Function? onTapShowPreparations, Function? onTapViewAllResults, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [GestureDetector(onTap: () {onTapShowPreparations!.call();}), Padding(padding: EdgeInsets.only(top: 1.v), child: Text(showPreparationsText, style: CustomTextStyles.labelLargePrimary.copyWith(color: theme.colorScheme.primary))), GestureDetector(onTap: () {onTapViewAllResults!.call();}), Text(viewAllResultsText, style: CustomTextStyles.labelLargePrimary.copyWith(color: theme.colorScheme.primary))]); } 
/// Navigates to the challengeboardPreparationScreen when the action is triggered.
onTapTxtShowPreparations(BuildContext context) { Navigator.pushNamed(context, AppRoutes.challengeboardPreparationScreen); } 
/// Navigates to the challengeboardScoreboardScreen when the action is triggered.
onTapTxtViewAllResults(BuildContext context) { Navigator.pushNamed(context, AppRoutes.challengeboardScoreboardScreen); } 

/// Shows a modal bottom sheet with [ChallengeboardShareresultOneBottomsheet] 
/// widget content.
/// The sheet is displayed on top of the current view with scrolling enabled if 
/// content exceeds viewport height.
onTapShareYourResult(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>ChallengeboardShareresultOneBottomsheet(),isScrollControlled: true); } 
/// Navigates to the challengeboardPreparationScreen when the action is triggered.
onTapTxtShowPreparations1(BuildContext context) { Navigator.pushNamed(context, AppRoutes.challengeboardPreparationScreen); } 
/// Navigates to the challengeboardScoreboardScreen when the action is triggered.
onTapTxtViewAllResults1(BuildContext context) { Navigator.pushNamed(context, AppRoutes.challengeboardScoreboardScreen); } 

/// Shows a modal bottom sheet with [ChallengeboardShareresultOneBottomsheet] 
/// widget content.
/// The sheet is displayed on top of the current view with scrolling enabled if 
/// content exceeds viewport height.
onTapShareYourResult1(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>ChallengeboardShareresultOneBottomsheet(),isScrollControlled: true); } 
 }
